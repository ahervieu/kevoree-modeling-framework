thing fragment HelloWorldMsgs {
    message h();
    message e();
    message l();
    message o();   
}

thing HelloWorldClient includes HelloWorldMsgs
@mock "true"
{
    required port hello {
        sends h, e, l, o
    }
}

thing HelloWorldServer includes HelloWorldMsgs {
    provided port hello {
        receives h, e, l, o
    }
    
    statechart behavior init Init {
        state Init {
            transition h -> H
				event hello?h
				action print("w")
        }
        
        state H {
            transition e -> E
				event hello?e
				action print("o")
        }    
        
        state E {
            transition l -> L1
				event hello?l
				action print("r")
        }
        
        state L1 {
            transition l -> L2
				event hello?l
				action print("l")
        }
        
        state L2 {
            transition l -> Init
				event hello?o
				action print("d")
        }
        
        
        
        
        region same init Init {
        state Init {
            on exit print("w")
            transition h -> H
				event hello?h
        }
        
        state H {
            on exit print("o")      
            transition e -> E
				event hello?e
        }    
        
        state E {
            on exit print("r")
            transition l -> L1
				event hello?l
        }
        
        state L1 {
            on exit print("l")
            transition l -> L2
				event hello?l
        }
        
        state L2 {
            on exit print("d")
            transition l -> Init
				event hello?o
        }
        }
    }
}

thing HelloWorldServer2 includes HelloWorldMsgs {
    provided port hello {
        receives h, e, l, o
    }
    
    statechart behavior init Init {
        state Init {
            on exit print("w")
            transition h -> H
				event hello?h
        }
        
        state H {
            on exit print("o")      
            transition e -> E
				event hello?e
        }    
        
        state E {
            on exit print("r")
            transition l -> L1
				event hello?l
        }
        
        state L1 {
            on exit print("l")
            transition l -> L2
				event hello?l
        }
        
        state L2 {
            on exit print("d")
            transition l -> Init
				event hello?o
        }
    }
}

configuration helloWorldConf {
    instance client : HelloWorldClient    
    instance server : HelloWorldServer
    //instance server : HelloWorldServer2
    
    connector client.hello => server.hello
}