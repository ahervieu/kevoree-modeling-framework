#* @vtlvariable name="classname" type="java.lang.String" *#
#* @vtlvariable name="refname" type="java.lang.String" *#
#* @vtlvariable name="typeadd" type="java.lang.String" *#

void ${classname}::add${refname}(${typeadd} *ptr)
{
    PRINTF("BEGIN -- ${classname} add${refname}");
    ${typeadd}  *container = (${typeadd} *)ptr;
    if(container->internalGetKey().empty())
    {
        cout << " KEY EMPTY add${refname} " << endl;
    }else
    {

        if(${refname}.find(container->internalGetKey()) == ${refname}.end())
        {
            PRINTF("KEY -- ${classname} ${refname}  "<< container->internalGetKey() );
            ${refname}[container->internalGetKey()]=ptr;
            ${iscontained}
        }
    }
    PRINTF("END -- ${classname}  add${refname}");
}

