#* @vtlvariable name="classname" type="java.lang.String" *#
#* @vtlvariable name="refname" type="java.lang.String" *#
#* @vtlvariable name="typeadd" type="java.lang.String" *#

void ${classname}::add${refname}(${typeadd} *ptr)
{
    KMFContainerImpl *container = (KMFContainerImpl*)ptr;
    if(container->internalGetKey().empty())
    {
        cout << " KEY EMPTY add${refname} " << endl;
    }
    ${refname}[container->internalGetKey()]=ptr;
    any ptr_any = ptr;
    RemoveFromContainerCommand  *cmd = new  RemoveFromContainerCommand(this,REMOVE,"${refname}",ptr_any);
    container->setEContainer(this,cmd,"${refname}");
}

